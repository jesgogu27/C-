// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using projectEF;

#nullable disable

namespace projectEF.Migrations
{
    [DbContext(typeof(TaskContext))]
    [Migration("20220720142700_InitialData")]
    partial class InitialData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("projectEF.Models.Categorie", b =>
                {
                    b.Property<Guid>("CategorieId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("Peso")
                        .HasColumnType("int");

                    b.HasKey("CategorieId");

                    b.ToTable("Categorie", (string)null);

                    b.HasData(
                        new
                        {
                            CategorieId = new Guid("14c0ef6a-3e32-44c6-8f16-5d1eb935b49d"),
                            Name = "Actividades pendientes",
                            Peso = 20
                        },
                        new
                        {
                            CategorieId = new Guid("14c0ef6a-3e32-44c6-8f16-5d1eb935b402"),
                            Name = "Actividades Personales",
                            Peso = 50
                        });
                });

            modelBuilder.Entity("projectEF.Models.Task", b =>
                {
                    b.Property<Guid>("TaskId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoriId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PrioritiTask")
                        .HasColumnType("int");

                    b.Property<string>("Tittle")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("TaskId");

                    b.HasIndex("CategoriId");

                    b.ToTable("Task", (string)null);

                    b.HasData(
                        new
                        {
                            TaskId = new Guid("14c0ef6a-3e32-44c6-8f16-5d1eb935b410"),
                            CategoriId = new Guid("14c0ef6a-3e32-44c6-8f16-5d1eb935b49d"),
                            CreationDate = new DateTime(2022, 7, 20, 9, 26, 59, 619, DateTimeKind.Local).AddTicks(6066),
                            PrioritiTask = 1,
                            Tittle = "Pagos pendientes"
                        },
                        new
                        {
                            TaskId = new Guid("14c0ef6a-3e32-44c6-8f16-5d1eb935b412"),
                            CategoriId = new Guid("14c0ef6a-3e32-44c6-8f16-5d1eb935b402"),
                            CreationDate = new DateTime(2022, 7, 20, 9, 26, 59, 619, DateTimeKind.Local).AddTicks(6095),
                            PrioritiTask = 0,
                            Tittle = "Terminar PElicula en Netflix"
                        });
                });

            modelBuilder.Entity("projectEF.Models.Task", b =>
                {
                    b.HasOne("projectEF.Models.Categorie", "Categorie")
                        .WithMany("Task")
                        .HasForeignKey("CategoriId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categorie");
                });

            modelBuilder.Entity("projectEF.Models.Categorie", b =>
                {
                    b.Navigation("Task");
                });
#pragma warning restore 612, 618
        }
    }
}
